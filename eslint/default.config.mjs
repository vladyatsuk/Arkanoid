import js from '@eslint/js';
import globals from 'globals';

export default [
  js.configs.recommended,
  {
    languageOptions: {
      globals: {
        ...globals.browser,
        ...globals.node,
      },
    },
    rules: {
      'array-callback-return': [
        'error',
        { allowImplicit: false, checkForEach: true, allowVoid: true },
      ],
      'no-await-in-loop': ['error'],
      'no-cond-assign': ['error', 'except-parens'],
      'no-constant-condition': ['error', { checkLoops: 'allExceptWhileTrue' }],
      'no-constructor-return': ['error'],
      'no-duplicate-imports': ['error', { includeExports: true }],
      'no-promise-executor-return': ['error'],
      'no-self-compare': ['error'],
      'no-template-curly-in-string': ['error'],
      'no-unmodified-loop-condition': ['error'],
      'no-unreachable-loop': ['error'],
      'no-unsafe-optional-chaining': [
        'error',
        { disallowArithmeticOperators: true },
      ],
      'no-use-before-define': ['error'],
      'no-useless-assignment': ['error'],
      'require-atomic-updates': ['error'],
      'use-isnan': ['error', { enforceForIndexOf: true }],
      'valid-typeof': ['error', { requireStringLiterals: true }],
      'arrow-body-style': ['error'],
      'camelcase': ['error'],
      'class-methods-use-this': ['warn'],
      'consistent-return': ['error'],
      'curly': ['error', 'multi-line', 'consistent'],
      'default-case-last': ['error'],
      'default-param-last': ['error'],
      'dot-notation': ['error'],
      'eqeqeq': ['error'],
      'func-style': ['error', 'expression'],
      'grouped-accessor-pairs': ['error', 'getBeforeSet'],
      'guard-for-in': ['error'],
      'logical-assignment-operators': ['error', 'never'],
      'max-depth': ['error'],
      'max-nested-callbacks': ['error', { max: 3 }],
      'new-cap': ['error'],
      'no-alert': ['error'],
      'no-array-constructor': ['error'],
      'no-bitwise': ['error'],
      'no-caller': ['error'],
      'no-else-return': ['error', { allowElseIf: false }],
      'no-empty': ['error'],
      'no-empty-function': ['error'],
      'no-eq-null': ['error'],
      'no-eval': ['error'],
      'no-extend-native': ['error'],
      'no-extra-bind': ['error'],
      'no-extra-boolean-cast': ['error', { enforceForInnerExpressions: true }],
      'no-implicit-coercion': ['error'],
      'no-implicit-globals': ['error'],
      'no-implied-eval': ['error'],
      'no-inline-comments': ['error'],
      'no-invalid-this': ['error'],
      'no-iterator': ['error'],
      'no-labels': ['error'],
      'no-lone-blocks': ['error'],
      'no-lonely-if': ['error'],
      'no-loop-func': ['error'],
      'no-magic-numbers': [
        'error',
        { ignoreArrayIndexes: true, ignoreClassFieldInitialValues: true },
      ],
      'no-multi-assign': ['error'],
      'no-multi-str': ['error'],
      'no-negated-condition': ['error'],
      'no-nested-ternary': ['error'],
      'no-new': ['error'],
      'no-new-func': ['error'],
      'no-new-wrappers': ['error'],
      'no-object-constructor': ['error'],
      'no-octal-escape': ['error'],
      'no-param-reassign': ['error'],
      'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
      'no-proto': ['error'],
      'no-restricted-syntax': ['error', 'FunctionDeclaration'],
      'no-return-assign': ['error'],
      'no-script-url': ['error'],
      'no-sequences': ['error', { allowInParentheses: false }],
      'no-shadow': ['error', { ignoreOnInitialization: true }],
      'no-throw-literal': ['error'],
      'no-undef-init': ['error'],
      'no-underscore-dangle': ['error'],
      'no-unneeded-ternary': ['error'],
      'no-unused-expressions': ['error'],
      'no-useless-call': ['error'],
      'no-useless-computed-key': ['error'],
      'no-useless-concat': ['error'],
      'no-useless-constructor': ['error'],
      'no-useless-rename': ['error'],
      'no-useless-return': ['error'],
      'no-var': ['error'],
      'object-shorthand': ['error'],
      'operator-assignment': ['error'],
      'prefer-arrow-callback': ['error'],
      'prefer-const': ['error'],
      'prefer-exponentiation-operator': ['error'],
      'prefer-named-capture-group': ['error'],
      'prefer-numeric-literals': ['error'],
      'prefer-object-has-own': ['error'],
      'prefer-object-spread': ['error'],
      'prefer-promise-reject-errors': ['error'],
      'prefer-regex-literals': ['error'],
      'prefer-rest-params': ['error'],
      'prefer-spread': ['error'],
      'prefer-template': ['error'],
      'require-await': ['error'],
      'strict': ['error'],
    },
  },
];
